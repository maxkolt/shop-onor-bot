const { Scenes, Markup } = require('telegraf');
const { UserModel, AdModel } = require('./models');

// –ö–∞—Ä—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
const categoryMap = {
  auto: 'üöó –ê–≤—Ç–æ',
  tech: 'üì± –¢–µ—Ö–Ω–∏–∫–∞',
  real_estate: 'üè† –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å',
  clothing: 'üëó –û–¥–µ–∂–¥–∞/–û–±—É–≤—å',
  other: 'üì¶ –ü—Ä–æ—á–µ–µ',
  pets: 'üêæ –¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö'
};

// –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
const CHANNEL_ID = process.env.CHANNEL_ID;

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
const mainMenuKeyboard = Markup.keyboard([
  ['–ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ'],
  ['–û–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –º–æ—ë–º –≥–æ—Ä–æ–¥–µ', '–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'],
  ['–ö–∞–Ω–∞–ª —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏', '–ü–æ–º–æ—â—å'],
  ['–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è']
]).resize();

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
function generateCaption(category, description) {
  const title = categoryMap[category] || 'üì¶ –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏';
  return `<b>${title}</b>\nüìù ${description}`;
}

// –°—Ü–µ–Ω–∞ –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
const adSubmissionScene = new Scenes.BaseScene('adSubmission');

// –û—Ç–º–µ–Ω–∞ —Å—Ü–µ–Ω—ã, –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç—ã –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –¥–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
adSubmissionScene.use(async (ctx, next) => {
  const text = ctx.message?.text;
  const menuButtons = [
    '–ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ',
    '–û–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –º–æ—ë–º –≥–æ—Ä–æ–¥–µ',
    '–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
    '–ö–∞–Ω–∞–ª —Å –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏',
    '–ü–æ–º–æ—â—å',
    '–ú–æ–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è'
  ];
  if (text && menuButtons.includes(text) && !ctx.session.category) {
    await ctx.reply('‚ùå –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–∞—á—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –°–¥–µ–ª–∞–π—Ç–µ –≤—ã–±–æ—Ä –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏:', mainMenuKeyboard);
    await ctx.scene.leave();
    return;
  }
  if (text?.startsWith('/') && text !== '/cancel') {
    return ctx.reply('‚õî –ö–æ–º–∞–Ω–¥—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è. –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.');
  }
  return next();
});

// –í—Ö–æ–¥ –≤ —Å—Ü–µ–Ω—É
adSubmissionScene.enter(async (ctx) => {
  delete ctx.session.category;
  delete ctx.session.description;
  await ctx.reply(
    '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:',
    Markup.inlineKeyboard([
      [Markup.button.callback('–ê–≤—Ç–æ', 'category_auto')],
      [Markup.button.callback('–¢–µ—Ö–Ω–∏–∫–∞', 'category_tech')],
      [Markup.button.callback('–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å', 'category_real_estate')],
      [Markup.button.callback('–û–¥–µ–∂–¥–∞/–û–±—É–≤—å', 'category_clothing')],
      [Markup.button.callback('–ü—Ä–æ—á–µ–µ', 'category_other')],
      [Markup.button.callback('–¢–æ–≤–∞—Ä—ã –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö', 'category_pets')]
    ])
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
adSubmissionScene.action(/category_(.+)/, async (ctx) => {
  ctx.session.category = ctx.match[1];
  await ctx.answerCbQuery();
  await ctx.reply(
    `–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ${categoryMap[ctx.session.category]}.
1. –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.
2. –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/—Ñ–∞–π–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
3. –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∏ –≥–æ—Ä–æ–¥ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ).

–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel`,
    { reply_markup: { remove_keyboard: true } }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ (–æ–ø–∏—Å–∞–Ω–∏–µ)
adSubmissionScene.on('text', async (ctx) => {
  const text = ctx.message.text.trim();
  const userId = ctx.chat.id;
  const category = ctx.session.category;

  if (!category) return ctx.reply('‚ùó –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é.');
  if (!text || text.startsWith('/')) return ctx.reply('‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "/"');

  ctx.session.description = text; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞
  await ctx.reply('üìé –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç), –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ. –ò–ª–∏ —Å–Ω–æ–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
async function handleMedia(ctx, type, fileId) {
  const userId = ctx.chat.id;
  const category = ctx.session.category;
  const description = ctx.session.description || '';

  if (!category || !description) {
    return ctx.reply('‚ùó –°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–º.');
  }

  try {
    await new AdModel({ userId, category, description, mediaType: type, mediaFileId: fileId, createdAt: new Date() }).save();

    const user = await UserModel.findOne({ userId });
    user.adCount++;
    await user.save();

    const caption = generateCaption(category, description);
    switch (type) {
      case 'photo':
        await ctx.telegram.sendPhoto(CHANNEL_ID, fileId, { caption, parse_mode: 'HTML' });
        break;
      case 'video':
        await ctx.telegram.sendVideo(CHANNEL_ID, fileId, { caption, parse_mode: 'HTML' });
        break;
      case 'document':
        await ctx.telegram.sendDocument(CHANNEL_ID, fileId, { caption, parse_mode: 'HTML' });
        break;
    }

    await ctx.reply('‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!', mainMenuKeyboard);
  } catch (err) {
    console.error(err);
    await ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }

  delete ctx.session.category;
  delete ctx.session.description;
  await ctx.scene.leave();
}

adSubmissionScene.on('photo', ctx => handleMedia(ctx, 'photo', ctx.message.photo.slice(-1)[0].file_id));
adSubmissionScene.on('video', ctx => handleMedia(ctx, 'video', ctx.message.video.file_id));
adSubmissionScene.on('document', ctx => handleMedia(ctx, 'document', ctx.message.document.file_id));

module.exports = { adSubmissionScene };
